var express = require('express')
  , partials = require('express-partials')
  , app = express();
var request = require('needle');
var database = require("./model/database.js");
var fs = require('fs');
var multipart = require('connect-multiparty');
var multipartMiddleware = multipart();
var mime = require('mime');

var datejs = require('safe_datejs');
var DbXml = database.Xmls;
var DbXmlButton = database.XmlButton;
var tLog = database.LogErro;
var DbDevice = database.Device;

var xmlModule = require("./model/xml.js");

var mongoose = require("mongoose");


var cadastroModule = require("./model/administrator.js");
var DbCadastro = database.Cadastro;

var empresaModule = require("./model/empresa.js");

var DbEmpresa = database.Empresa;



app.configure(function(){
	app.set("views","views");
	app.use(partials());
	app.use(express.favicon());
	app.use(express.logger());
	app.use(express.cookieParser());
	app.use(express.json());
	app.use(express.urlencoded());
	app.use(express.methodOverride());
	app.use('/', express.static('public'));
	app.use(express.session({secret: 'sessionLoginHomeEae'}));
	app.engine('.html', require('ejs').renderFile);
	app.set("view engine","html");
	app.set("view options",{
		layout: 'home'
	});
	
});

app.get("/",function(req,res,next){
	if(req.session.admin)
	{
		res.redirect("/home");
	}
	else
	{
		res.render('index',{layout: 'login',title:"Aprovador",erro:req.session.erro,code:""});
		req.session.destroy();
		
	}
	
	
});
app.get("/userNew/:login/:senha/:tipo/:situacao/:nome",function(req,res,next){
	
	console.log(req.params);
	request.post("http://127.0.0.1:8080/createAdmin",{login:req.params.login,senha:req.params.senha,tipo:req.params.tipo,nome:req.params.nome,situacao:"ATIVO"},function(error, response, body){
		console.log("erro é:"+error);
		//console.log(response);
		
	});
	res.end();
});

app.post("/",function(req,res,next){
	
	DbCadastro.findOne({usuario : req.body.login,senha:req.body.senha}, function(err, retDatabase) {
        console.log(req.body);
        if (retDatabase) 
        {
			console.log(retDatabase);
			
			req.session.admin = retDatabase;
			
			res.redirect("/home");
        }	
        else
        {
        	req.session.erro = {code:500,message:"Usu&aacute;rio ou senha inv&aacute;lidos"};
        	res.redirect("/");
        }
    });
});


app.get("/logout",function(req,res,next){
	req.session.destroy();
	res.redirect("/");
});

app.get("/admin/form",function(req,res,next){
	
	if(!req.session.admin)
	{	
		req.session.erro = {code:400,message:"Sem acesso"};
		res.redirect("/");
		return;
	}
	console.log(req.query);
	
	
	
	if(req.query.p1)
	{
		DbCadastro.findOne({_id:req.query.p1},function(err,ret){
			DbEmpresa.find().sort().exec(function (err, listAllEmpresa) {
				
				res.render('formAdmin',{layout: 'home',qryEmpresa:listAllEmpresa,param:ret,title:"Aprovador",username:req.session.admin.nome,code:err});
				
			});
		});
	}
	else
	{
		DbEmpresa.find().sort().exec(function (err, listAllEmpresa) {	
			
			res.render('formAdmin',{layout: 'home',title:"Aprovador",qryEmpresa:listAllEmpresa,username:req.session.admin.nome,code:err});
			
		});
		
		
	}
	
	
});


app.get("/admin/list",cadastroModule.findAll);

app.get("/admin/listUser",cadastroModule.findAllUser);

app.post("/createAdmin",function(req,res,next){
//	if(!req.session.admin)
//	{	
//		req.session.erro = {code:400,message:"Sem acesso"};
//		res.redirect("/");
//		return;
//	}
	
	if(req.body.identificador)
	{
		DbCadastro.findOne({_id:req.body.identificador},function(err,ret){
			ret.usuario = req.body.login;
			ret.senha = req.body.senha;
			ret.nome = req.body.nome;
			ret.situacao = req.body.situacao;
			ret.cod_usuario = req.body.cod_usuario;
			if(req.body.situacao == "INATIVO")
			{
				var today = new Date();
				var unsafeToday = today.AsDateJs(); 
				ret.data_termino= unsafeToday;
			}
			
			ret.save(function(err,saveAdmin){
				console.log(err);
				console.log(saveAdmin);
				if(!err)
				{
					req.session.erro = {code:666,message:"Usuário alterado com sucesso!"};
					res.redirect("/home");
				}
				else
				{
					req.session.erro = {code:666,message:err.message};
					res.redirect("/home");
				}
				
			});
		});
		
	}
	else
	{
		var admin = new DbCadastro();
		admin.usuario = req.body.login;
		admin.senha = req.body.senha;
		admin.tipo = req.body.tipo;
		admin.nome = req.body.nome;
		admin.situacao = req.body.situacao;
		admin.cod_usuario = req.body.cod_usuario;
		var today = new Date();
		var unsafeToday = today.AsDateJs(); 
		admin.data_inicio = unsafeToday;
		
		
		admin.id_empresa = req.body.empresa;
		admin.save(function(err,saveAdmin){
			console.log(err);
			if(!err)
			{
				req.session.erro = {code:666,message:"Usuário incluído com sucesso!"};
				res.redirect("/home");
			}
			else
			{
				req.session.erro = {code:666,message:err.message};
				res.redirect("/home");
			}
		});
	}
});
app.get("/home",function(req,res,next){
	console.log(req.session.admin);
	
	if(req.session.admin)
	{
		console.log(req.session.admin);
		err = "";
	
		res.render('index',{layout: 'home',username:req.session.admin.nome,title:"Aprovador",erro:req.session.erro});
	}
	else
	{
		req.session.erro = {code:400,message:"Sem acesso"};
		res.redirect("/");
	}
});
app.get("/xml/new",function(req,res,next){
	
	if(!req.session.admin)
	{
		req.session.erro = {code:400,message:"Sem acesso"};
		res.redirect("/");
	}
	
	
	if(req.query.p1)
	{
		DbXml.findOne({_id:req.query.p1},function(err,ret){
			res.render('form',{layout: 'home',param:ret,title:"Aprovador"});
		});
	}
	else
	{
		res.render('form',{layout: 'home',title:"Aprovador"});
	}
	
	
});

app.get("/xml/new/:id",function(req,res,next){
	
	if(!req.session.admin)
	{
		req.session.erro = {code:400,message:"Sem acesso"};
		res.redirect("/");
	}
	
	res.render('form',{layout: 'home',title:"Aprovador"});
});
app.get("/xml/list",xmlModule.findAll);


app.post("/registerDevice",function(req,res,next){
	if(!req.session.admin)
	{
		req.session.erro = {code:400,message:"Sem acesso"};
		res.redirect("/");
	}
	
	if(req.body.udid)
	{
		exists = false;
		DbDevice.findOne({udid:{$ne : req.body.udid}},function(error,retorno)
		{
			device = new DbDevice();
			device.udid = req.body.udid;
			device.device = req.body.device;
			device.version = req.body.ios;

			device.save(function(err,saveXml){
				
				if(!err)
				{
					res.json(saveXml);
				}
				else
				{
					res.json(err);
				}
			});
		});
		
		///Caso não tenha nenhum device;
		device = new DbDevice();
		device.udid = req.body.udid;
		device.device = req.body.device;
		device.version = req.body.ios;

		device.save(function(err,saveXml){
			
			if(!err)
			{
				res.json(saveXml);
			}
			else
			{
				res.json(err);
			}
		});
		
				
	}
	else
	{
		erro.code = 666;
		erro.message = "Todos os campos são obrigatórios.";
		res.json(erro);
	}
	
});


app.get("/sendpush",function(req,res,next){
//	
//	
//	var id = req.query.p1;
//	
//	
//	DbXml.findOne({_id:id},function(err,retRev){
//		console.log(retRev);
//		
//		DbDevice.find().exec(function(error,retorno){
//			console.log("DbDevice = "+retorno);
//			for (i = 0;i< retorno.length;i++)
//			{
//				console.log("retorno titulo = "+retorno[i].udid);
//				var 
//				  cert_and_key = require('fs').readFileSync('./apns-dev.pem')
//				  notifier = require('node_apns').services.Notifier({ cert: cert_and_key, key: cert_and_key }, true /* development = true, production = false */)
//
//
//				 /* 
//				   Now you may send notifications!
//				 */
//
//				 var Notification = require('node_apns').Notification;
//
//				 notifier.notify(Notification("55c62665bad08c74a91a5208667e7ea89acaf69e747209699dc9ce0d3fccb831", { aps: { alert:"Nova Edição: "+p1, sound: "default" }}), 
//				   function (err) { 
//					 if (!err)
//						{
//							console.log("Sent", this);
//							res.json(this);
//						}  
//						else 
//						{
//							console.log('Error', err, 'on', this);
//							res.json(err);
//						}
//				   }
//				 );
//
//				
//			}
//			
//			
//			
//		});
//				
//	});
//	
	
	
});

//Create LOG

function createLog(ip,mensagem,tipo)
{
	var log = new LogErro();
	
	log.ip = ip;
	log.mensagem = mensagem;
	log.tipo = tipo;
	
	log.save(function(err,saveXML){
		if(!err)
		{
			return true;
		}
		else
		{
			return false;
		}
			
	});

}



//POST Dos Dados
app.post("/createXml",multipartMiddleware, function(req,res,next){
	var retApp = req.query.app;
	if(!req.session.admin && !retApp)
	{
		req.session.erro = {code:400,message:"Sem acesso"};
		res.redirect("/");
	}
	if(req.body.identificador)
	{
		DbXml.findOne({_id:req.body.identificador},function(err,ret){
			
			
		});
	}
	else
	{

		
		
		require('crypto').randomBytes(32, function(ex, buf) {
			var token = buf.toString('hex');
		    var spt = req.files.xml.name.split(".");
			var imageName = token +"."+spt[spt.length-1]; 
			
			fs.readFile(req.files.xml.path, function (err, data) {
			  // ...
				  var newPath = __dirname + "/public/xml/"+imageName;
				  
				  fs.writeFile(newPath, data, function (err) {
					  var xmlArq = imageName;
					  console.log(newPath);
					  
					  xml2js = require('xml2js');
						
						var parser = new xml2js.Parser();
						fs.readFile(newPath, function(err, data) {
							
							
						    parser.parseString(data, function (err, result) {
						        var obj = result.root.items[0];
						        
						        console.log(obj.item.length);
						    	
						    	var sucesso = false;
						    	var cCount = 0;
						    	var retorno = new Object();
						    	for (i = 0; i< obj.item.length;i++)
						    	{
						    		var item = obj.item[i];
						    		cCount =cCount + 1;
						    		var xml = new DbXml();
						    		
						    		
						    		xml.cod_usuario= item.user;
						    		xml.subject= item.subject;
						    		xml.category = item.category;
						    		xml.priority = item.priority;
						    		xml.start_date = item.start_date;
						    		xml.end_date = item.end_date;
						    		xml.id_xml_enviado = item.id;
						    		xml.dados_criptografados = item.detail;
						    		
						    		
						    		for (j = 0;j < item.buttons.length;j++)
						    		{
						    			var btn = item.buttons[j];
						    			
						    			var xmlButtom = new DbXmlButton();
						    			xmlButtom.id_xml = item.id;
						    			
						    		}
						    		
						    		console.log(item);
						    		
						    		
						    		xml.save(function(err,saveXML){
						    			console.log(err);
						    			if(!err)
						    			{
						    				if(cCount == obj.item.length)
						    				{
						    					
						    					retorno.success = true;
							    				retorno.mensagem = "XML incluído com sucesso";
							    				res.json(retorno);
						    					
						    				}
						    			}
						    			else
						    			{
						    				
						    				retorno.success = false;
						    				retorno.mensagem = "XML com o seguinte erro: "+err.message;
						    				res.json(retorno);
						    			}
						    		});
						    		
						    		
						    		
						    	}
						        console.log('Done');
						    });
						});
					  
				 });
			  
			});
		});
		
	}
	
});


app.post("/removeXML",function(req,res,next){
	var retApp = req.query.app;
	
	if(!req.session.admin && !retApp )
	{
		req.session.erro = {code:400,message:"Sem acesso"};
		res.redirect("/");
	}
	if(req.body.id)
	{
		DbXml.remove( {"_id": req.body.id},function(err,ret){
			if(!err)
			{
				req.session.erro = {code:001,message:"Xml removida com sucesso!"};
			}
			else
			{
				req.session.erro = err;
			}
			res.end();
		});
		
		
	}
});


app.post("/removeAdmin",function(req,res,next){
	var retApp = req.query.app;
	
	if(!req.session.admin && !retApp )
	{
		req.session.erro = {code:400,message:"Sem acesso"};
		res.redirect("/");
	}
	if(req.body.id)
	{
		DbCadastro.remove( {"_id": req.body.id},function(err,ret){
			if(!err)
			{
				req.session.erro = {code:001,message:"Cadastro removido com sucesso!"};
			}
			else
			{
				req.session.erro = err;
			}
			res.end();
		});
		
		
	}
});



app.get("/empresa/new",function(req,res,next){
	
	if(!req.session.admin)
	{	
		req.session.erro = {code:400,message:"Sem acesso"};
		res.redirect("/");
		return;
	}
	console.log(req.query);
	
	
	
	if(req.query.p1)
	{
		DbEmpresa.findOne({_id:req.query.p1},function(err,ret){
			res.render('formEmpresa',{layout: 'home',param:ret,title:"Aprovador",username:req.session.admin.nome,code:err});
		});
	}
	else
	{
		res.render('formEmpresa',{layout: 'home',title:"Aprovador",username:req.session.admin.nome,code:err});
	}
	
	
});


app.get("/empresa/list",empresaModule.findAll);

app.post("/createEmpresa",function(req,res,next){
//	if(!req.session.admin)
//	{	
//		req.session.erro = {code:400,message:"Sem acesso"};
//		res.redirect("/");
//		return;
//	}
	
	console.log(req);
	
	if(req.body.identificador)
	{
		DbEmpresa.findOne({_id:req.body.identificador},function(err,ret){
			ret.descricao = req.body.descricao;
			ret.nome = req.body.nome;
			ret.situacao = req.body.situacao;
			
			if(req.body.situacao == "INATIVO")
			{
				var today = new Date();
				var unsafeToday = today.AsDateJs(); 
				ret.data_termino= unsafeToday;
			}
			
			
			ret.save(function(err,saveAdmin){
				console.log(err);
				console.log(saveAdmin);
				if(!err)
				{
					req.session.erro = {code:666,message:"Empresa alterada com sucesso!"};
					res.redirect("/home");
				}
				else
				{
					req.session.erro = {code:666,message:err.message};
					res.redirect("/home");
				}
				
			});
		});
		
	}
	else
	{
		var empresa = new DbEmpresa();
		empresa.descricao = req.body.descricao;
		empresa.nome = req.body.nome;
		empresa.situacao = req.body.situacao;
		
		var today = new Date();
		var unsafeToday = today.AsDateJs(); 
		empresa.data_inicio= unsafeToday;
		
		empresa.save(function(err,saveAdmin){
			console.log(err);
			if(!err)
			{
				req.session.erro = {code:666,message:"Empresa incluída com sucesso!"};
				res.redirect("/home");
			}
			else
			{
				req.session.erro = {code:666,message:err.message};
				res.redirect("/home");
			}
		});
	}
});

app.configure("development",function(){
	app.use(express.errorHandler({dumpExceptions:true,showStack:true}));
	app.set("db-uri","mongodb://localhost/aprovador");
	
});

app.configure("production",function(){
	app.use(express.errorHandler());
	app.set("db-uri","mongodb://localhost/aprovador");
});

app.db = mongoose.createConnection(app.set("db-uri"));

app.listen(8080);
